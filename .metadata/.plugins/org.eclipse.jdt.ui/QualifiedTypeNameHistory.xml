<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="com.ibm.currencyconversionfactor.beans.ResponseStatus"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="com.ibm.convertcurrency.services.CurrencyExchangeServiceProxy"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.ibm.currencyconversionfactor.repository.ConversionFactorRepository"/>
<fullyQualifiedTypeName name="com.ibm.currencyconversionfactor.beans.ConversionFactorDetail"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
<fullyQualifiedTypeName name="com.google.common.base.Function"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.PredicateSpec"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.Buildable"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.Route"/>
<fullyQualifiedTypeName name="java.util.function.Function"/>
<fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
<fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="zipkin2.server.internal.EnableZipkinServer"/>
<fullyQualifiedTypeName name="zipkin.server.EnableZipkinServer"/>
</qualifiedTypeNameHistroy>
